name: Ultimate FTP Connection Debugger

on:
  workflow_dispatch: # Allows you to run this manually from the Actions tab

jobs:
  debug-ftp-connection:
    runs-on: ubuntu-latest

    steps:
    - name: Get the IP Address of the Runner
      id: ip
      run: |
        # Find the runner's public IP and save it to a variable
        RUNNER_IP=$(curl -s ifconfig.me)
        echo "Runner's Public IP: $RUNNER_IP"
        echo "ip=$RUNNER_IP" >> $GITHUB_OUTPUT

    - name: Test Basic Connectivity to Port 3000
      run: |
        echo "Attempting to connect to ${{ secrets.FTP_HOST }} on port 3000..."
        # This will try to connect and immediately exit.
        # If this hangs or fails, the port is not reachable from this IP.
        timeout 10 telnet ${{ secrets.FTP_HOST }} 3000 || echo "Telnet connection failed. Port is likely blocked or server is not listening."

    - name: Install lftp
      run: sudo apt-get update && sudo apt-get install -y lftp

    - name: Attempt FTP Connection with Forced Passive Mode
      run: |
        lftp -d -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} -p 3000 ${{ secrets.FTP_HOST }} <<EOF
        # --- CRITICAL DEBUGGING SETTINGS ---
        # Force Passive Mode, which is required for NAT/Firewalls
        set ftp:passive-mode on
        
        # Disable SSL/TLS verification as you use plain FTP
        set ftp:ssl-allow no
        
        # Increase debug level to maximum
        set ftp:debug 10
        
        # Set a reasonable timeout
        set net:timeout 15
        set net:max-retries 2

        # --- TEST COMMAND ---
        # If this command works, the connection is successful.
        ls
        
        bye
        EOF